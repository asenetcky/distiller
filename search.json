[{"path":[]},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement asenetcky@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://asenetcky.github.io/distiller/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://asenetcky.github.io/distiller/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 distiller authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://asenetcky.github.io/distiller/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Senetcky. Author, maintainer, copyright holder.","code":""},{"path":"https://asenetcky.github.io/distiller/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Senetcky (2024). distiller: Distill EPHT Data XML. R package version 0.3.2, https://asenetcky.github.io/distiller/, https://github.com/asenetcky/distiller.","code":"@Manual{,   title = {distiller: Distill EPHT Data Down to XML},   author = {Alexander Senetcky},   year = {2024},   note = {R package version 0.3.2, https://asenetcky.github.io/distiller/},   url = {https://github.com/asenetcky/distiller}, }"},{"path":[]},{"path":"https://asenetcky.github.io/distiller/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Distill EPHT Data Down to XML","text":"newbie submit data CDC’s EPHT program, dismayed find documentation buried many layers inside SharePoint. also highly fragmented, convoluted many cases, conflicts . goal make process easier reproducible , others. highly specific package ? submit data CDC’s EPHT program? use R? interested incorporating R workflow? struggle CDC’s EPHT documenation /tooling? want make submission process reproducible? answered yes first question others, package might .","code":""},{"path":"https://asenetcky.github.io/distiller/index.html","id":"what-does-this-package-do","dir":"","previous_headings":"","what":"What does this package do?","title":"Distill EPHT Data Down to XML","text":"think ’s important state front package doesn’t - , wrangle data . helpers, whole slew checks distiller run data metadata ensure everything reasonably close correct format submission CDC’s EPHT program. distiller still expects data specific variable names, required variables type data. However, ’ve ever wondered epht requires different variable names different order types data, even disease ’ll pleased know distiller takes care facility-type-specific naming conventions ordering . Users just need bring data now can spend less time worrying XML semantics time polishing data products. disitller replacement CDC EPHPT Test Submission portal, however, creating XML, shuffling files around dropping portal waiting indeterminate amount time feedback eats time pain. distiller aims provide feedback data metadata send CDC. way, can fix obvious issues sink 20+ minutes waiting find forgot replace NA’s “U”.","code":""},{"path":"https://asenetcky.github.io/distiller/index.html","id":"whats-in-the-box","dir":"","previous_headings":"","what":"What’s in the box?","title":"Distill EPHT Data Down to XML","text":"distiller contains following core functions: * check_submission() - function checks data metadata provides quick feedback * make_xml_document() - function creates xml document submission based data metadata provide distiller also contains functions : * collapsing race ethnicity values CDC’s required format * converting month integers 0-padded character strings * return proper health outcome identifier given content group identifier * Starting scratch? mini-functions make two core ones exposed user, can check work pieces make progress data wrangling","code":""},{"path":"https://asenetcky.github.io/distiller/index.html","id":"distiller-expectations-and-scope","dir":"","previous_headings":"","what":"distiller expectations and scope","title":"Distill EPHT Data Down to XML","text":"distiller works following content group identifiers: -HOSP -ED CO-HOSP CO-ED MI-HOSP HEAT-HOSP HEAT-ED COPD-HOSP COPD-ED distiller expects following variables data: every content group identifier: agegroup county sex ethnicity race health_outcome_id, monthly_count month year content group identifiers CO-HOSP CO-ED, plus following: fire_count nonfire_count unknown_count","code":""},{"path":"https://asenetcky.github.io/distiller/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Distill EPHT Data Down to XML","text":"can install development version distiller GitHub :","code":"# install.packages(\"pak\") pak::pak(\"asenetcky/distiller\")"},{"path":"https://asenetcky.github.io/distiller/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Distill EPHT Data Down to XML","text":"basic example use :","code":"library(distiller)  # Take you already-wrangled data # note the specific variable names data <-     mtcars |>     dplyr::rename(       month = mpg,       agegroup = cyl,       county = disp,       ethnicity = hp,       health_outcome_id = drat,       monthly_count = wt,       race = qsec,       sex = vs,       year = am     ) |>     dplyr::select(-c(gear, carb))  # And your metadata   content_group_id <- \"AS-HOSP\"   mcn <- \"1234-1234-1234-1234-1234\"   jurisdiction_code <- \"two_letter_code\"   state_fips_code <- \"1234\"   submitter_email <- \"submitter@email.com\"   submitter_name <- \"Submitter Name\"   submitter_title <- \"Submitter Title\"    # Optionally check your submission data structure and metadata   check_submission(     data,     content_group_id,     mcn,     jurisdiction_code,     state_fips_code,     submitter_email,     submitter_name,     submitter_title     ) #> ℹ Checking submission metadata #> ✔ Success: content_group_id #> ! Warning: mcn may not have correct format #> Troublemakers: length, format #> ! Warning: jurisdiction_code may not have correct format #> Troublemakers: length, format #> ! Warning: state_fips_code may not have correct format #> Troublemakers: length, format #> ✔ Success: submitter_email #> ✔ Success: submitter_name #> ✔ Success: submitter_title #> ℹ Checking data structure and content #> ✔ Success: dataframe_structure #> ✖ Danger: month does not have allowable value/s #> Troublemakers: allowed_values #> ✔ Success: agegroup #> ✖ Danger: county does not have allowable value/s #> Troublemakers: length #> ✖ Danger: ethnicity does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: health_outcome_id does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: sex does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: year does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: race does not have allowable value/s #> Troublemakers: allowed_values #> ✔ Success: monthly_count # This can also be checked with `check_first = TRUE` in `make_xml_document()`     # And then make your xml document make_xml_document(     data,     content_group_id,     mcn,     jurisdiction_code,     state_fips_code,     submitter_email,     submitter_name,     submitter_title     ) #> {xml_document} #> <HospitalizationData schemaLocation=\"http://www.ephtn.org/NCDM/PH/HospitalizationData ephtn-ph-HospitalizationData.xsd\" xmlns=\"http://www.ephtn.org/NCDM/PH/HospitalizationData\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> #> [1] <Header>\\n  <MCN>1234-1234-1234-1234-1234<\/MCN>\\n  <JurisdictionCode>two_ ... #> [2] <Dataset>\\n  <Row>\\n    <RowIdentifier>1<\/RowIdentifier>\\n    <AdmissionM ..."},{"path":"https://asenetcky.github.io/distiller/reference/check_content_group_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a Content Group Identifier — check_content_group_id","title":"Check the validity of a Content Group Identifier — check_content_group_id","text":"Check  validity Content Group Identifier","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_content_group_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a Content Group Identifier — check_content_group_id","text":"","code":"check_content_group_id(content_group_id)"},{"path":"https://asenetcky.github.io/distiller/reference/check_content_group_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a Content Group Identifier — check_content_group_id","text":"content_group_id Code identifies content","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_content_group_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a Content Group Identifier — check_content_group_id","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_content_group_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a Content Group Identifier — check_content_group_id","text":"","code":"check_content_group_id(\"AS-HOSP\") #> $code #> [1] 0 #>  #> $message #> Success: content_group_id #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of the data structure — check_data","title":"Check the validity of the data structure — check_data","text":"Check validity data structure","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of the data structure — check_data","text":"","code":"check_data(data, content_group_id)"},{"path":"https://asenetcky.github.io/distiller/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of the data structure — check_data","text":"data dataframe content_group_id Code identifies content","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of the data structure — check_data","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of the data structure — check_data","text":"","code":"check_data(mtcars, \"AS-HOSP\") #> $code #> [1] 1 #>  #> $message #> Danger: dataframe_structure does not have allowable value/s #> Troublemakers: variables #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_data_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the content of your data's variables — check_data_content","title":"Check the content of your data's variables — check_data_content","text":"Check content data's variables","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_data_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the content of your data's variables — check_data_content","text":"","code":"check_data_content(data, content_group_id)"},{"path":"https://asenetcky.github.io/distiller/reference/check_data_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the content of your data's variables — check_data_content","text":"data dataframe wrangled data content_group_id Code identifies content","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_data_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the content of your data's variables — check_data_content","text":"list exit statuses variable","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_data_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the content of your data's variables — check_data_content","text":"","code":"data <-  mtcars |>   dplyr::rename(     month = mpg,     agegroup = cyl,     county = disp,     ethnicity = hp,     health_outcome_id = drat,     monthly_count = wt,     race = qsec,     sex = vs,     year = am   ) |>   dplyr::select(-c(gear, carb))  check_data_content(data, \"AS-HOSP\") #> $check_month_var #> $check_month_var$code #> [1] 1 #>  #> $check_month_var$message #> Danger: month does not have allowable value/s #> Troublemakers: allowed_values #>  #>  #> $check_agegroup_var #> $check_agegroup_var$code #> [1] 0 #>  #> $check_agegroup_var$message #> Success: agegroup #>  #>  #> $check_county_var #> $check_county_var$code #> [1] 1 #>  #> $check_county_var$message #> Danger: county does not have allowable value/s #> Troublemakers: length #>  #>  #> $check_ethnicity_var #> $check_ethnicity_var$code #> [1] 1 #>  #> $check_ethnicity_var$message #> Danger: ethnicity does not have allowable value/s #> Troublemakers: allowed_values #>  #>  #> $check_health_outcome_id_var #> $check_health_outcome_id_var$code #> [1] 1 #>  #> $check_health_outcome_id_var$message #> Danger: health_outcome_id does not have allowable value/s #> Troublemakers: allowed_values #>  #>  #> $check_sex_var #> $check_sex_var$code #> [1] 1 #>  #> $check_sex_var$message #> Danger: sex does not have allowable value/s #> Troublemakers: allowed_values #>  #>  #> $check_year_var #> $check_year_var$code #> [1] 1 #>  #> $check_year_var$message #> Danger: year does not have allowable value/s #> Troublemakers: allowed_values #>  #>  #> $check_race_var #> $check_race_var$code #> [1] 1 #>  #> $check_race_var$message #> Danger: race does not have allowable value/s #> Troublemakers: allowed_values #>  #>  #> $check_monthly_count_var #> $check_monthly_count_var$code #> [1] 0 #>  #> $check_monthly_count_var$message #> Success: monthly_count #>  #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_jurisdiction_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a jurisdiction code — check_jurisdiction_code","title":"Check the validity of a jurisdiction code — check_jurisdiction_code","text":"Check validity jurisdiction code","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_jurisdiction_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a jurisdiction code — check_jurisdiction_code","text":"","code":"check_jurisdiction_code(jurisdiction_code)"},{"path":"https://asenetcky.github.io/distiller/reference/check_jurisdiction_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a jurisdiction code — check_jurisdiction_code","text":"jurisdiction_code Two-letter state code","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_jurisdiction_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a jurisdiction code — check_jurisdiction_code","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_jurisdiction_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a jurisdiction code — check_jurisdiction_code","text":"","code":"check_jurisdiction_code(\"CA\") #> $code #> [1] 0 #>  #> $message #> Success: jurisdiction_code #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_mcn.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of a Metadata Control Number — check_mcn","title":"Check validity of a Metadata Control Number — check_mcn","text":"Check validity Metadata Control Number","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_mcn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of a Metadata Control Number — check_mcn","text":"","code":"check_mcn(mcn)"},{"path":"https://asenetcky.github.io/distiller/reference/check_mcn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of a Metadata Control Number — check_mcn","text":"mcn Metadata Control Number provided EPHT","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_mcn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of a Metadata Control Number — check_mcn","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_mcn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check validity of a Metadata Control Number — check_mcn","text":"","code":"check_mcn(\"12345678-1234-1234-1234-123456789012\") #> $code #> [1] 0 #>  #> $message #> Success: mcn #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_state_fips_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a state FIPS code — check_state_fips_code","title":"Check the validity of a state FIPS code — check_state_fips_code","text":"Check validity state FIPS code","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_state_fips_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a state FIPS code — check_state_fips_code","text":"","code":"check_state_fips_code(state_fips_code)"},{"path":"https://asenetcky.github.io/distiller/reference/check_state_fips_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a state FIPS code — check_state_fips_code","text":"state_fips_code FIPS code state","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_state_fips_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a state FIPS code — check_state_fips_code","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_state_fips_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a state FIPS code — check_state_fips_code","text":"","code":"check_state_fips_code(\"06\") #> $code #> [1] 0 #>  #> $message #> Success: state_fips_code #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_submission.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a submission — check_submission","title":"Check the validity of a submission — check_submission","text":"Check validity submission","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a submission — check_submission","text":"","code":"check_submission(   data,   content_group_id,   mcn,   jurisdiction_code,   state_fips_code,   submitter_email,   submitter_name,   submitter_title )"},{"path":"https://asenetcky.github.io/distiller/reference/check_submission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a submission — check_submission","text":"data dataframe converted XML content_group_id Code identifies content mcn Metadata Control Number provided EPHT jurisdiction_code Two-letter state abbreviation state_fips_code FIPS code state submitter_email Email person submitting data EPHT submitter_name First last name person submitting data submitter_title Title person submitting data","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a submission — check_submission","text":"cli list terminal submission check results","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submission.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a submission — check_submission","text":"","code":"data <- mtcars |>   dplyr::rename(     month = mpg,     agegroup = cyl,     county = disp,     ethnicity = hp,     health_outcome_id = drat,     monthly_count = wt,     race = qsec,     sex = vs,     year = am   ) |>   dplyr::select(-c(gear, carb)) content_group_id <- \"AS-HOSP\" mcn <- \"1234-1234-1234-1234-1234\" jurisdiction_code <- \"two_letter_code\" state_fips_code <- \"1234\" submitter_email <- \"submitter@email.com\" submitter_name <- \"Submitter Name\" submitter_title <- \"Submitter Title\" check_submission(  data,  content_group_id,  mcn,  jurisdiction_code,  state_fips_code,  submitter_email,  submitter_name,  submitter_title ) #> ℹ Checking submission metadata #> ✔ Success: content_group_id #> ! Warning: mcn may not have correct format #> Troublemakers: length, format #> ! Warning: jurisdiction_code may not have correct format #> Troublemakers: length, format #> ! Warning: state_fips_code may not have correct format #> Troublemakers: length, format #> ✔ Success: submitter_email #> ✔ Success: submitter_name #> ✔ Success: submitter_title #> ℹ Checking data structure and content #> ✔ Success: dataframe_structure #> ✖ Danger: month does not have allowable value/s #> Troublemakers: allowed_values #> ✔ Success: agegroup #> ✖ Danger: county does not have allowable value/s #> Troublemakers: length #> ✖ Danger: ethnicity does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: health_outcome_id does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: sex does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: year does not have allowable value/s #> Troublemakers: allowed_values #> ✖ Danger: race does not have allowable value/s #> Troublemakers: allowed_values #> ✔ Success: monthly_count"},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a submitter email — check_submitter_email","title":"Check the validity of a submitter email — check_submitter_email","text":"Check validity submitter email","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a submitter email — check_submitter_email","text":"","code":"check_submitter_email(submitter_email)"},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a submitter email — check_submitter_email","text":"submitter_email email address string","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a submitter email — check_submitter_email","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_email.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a submitter email — check_submitter_email","text":"","code":"check_submitter_email(\"myemail@email.com\") #> $code #> [1] 0 #>  #> $message #> Success: submitter_email #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a submitter name — check_submitter_name","title":"Check the validity of a submitter name — check_submitter_name","text":"Check validity submitter name","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a submitter name — check_submitter_name","text":"","code":"check_submitter_name(submitter_name)"},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a submitter name — check_submitter_name","text":"submitter_name First last name person submitting data","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a submitter name — check_submitter_name","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a submitter name — check_submitter_name","text":"","code":"check_submitter_name(\"Firstname Lastname\") #> $code #> [1] 0 #>  #> $message #> Success: submitter_name #>"},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the validity of a submitter title — check_submitter_title","title":"Check the validity of a submitter title — check_submitter_title","text":"Check validity submitter title","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the validity of a submitter title — check_submitter_title","text":"","code":"check_submitter_title(submitter_title)"},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the validity of a submitter title — check_submitter_title","text":"submitter_title Job title person submitting data","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the validity of a submitter title — check_submitter_title","text":"list containing exit status code success/failure message","code":""},{"path":"https://asenetcky.github.io/distiller/reference/check_submitter_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the validity of a submitter title — check_submitter_title","text":"","code":"check_submitter_title(\"Data Scientist\") #> $code #> [1] 0 #>  #> $message #> Success: submitter_title #>"},{"path":"https://asenetcky.github.io/distiller/reference/collapse_ethnicity.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Ethnicity based on EPHT logic — collapse_ethnicity","title":"Collapse Ethnicity based on EPHT logic — collapse_ethnicity","text":"Collapse Ethnicity based EPHT logic","code":""},{"path":"https://asenetcky.github.io/distiller/reference/collapse_ethnicity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Ethnicity based on EPHT logic — collapse_ethnicity","text":"","code":"collapse_ethnicity(ethnicity, na_is_unknown = TRUE)"},{"path":"https://asenetcky.github.io/distiller/reference/collapse_ethnicity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Ethnicity based on EPHT logic — collapse_ethnicity","text":"ethnicity Ethnicity string na_is_unknown Convert NAs \"U\" leave -","code":""},{"path":"https://asenetcky.github.io/distiller/reference/collapse_ethnicity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Ethnicity based on EPHT logic — collapse_ethnicity","text":"Ethnicity string NA_character_","code":""},{"path":"https://asenetcky.github.io/distiller/reference/collapse_ethnicity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse Ethnicity based on EPHT logic — collapse_ethnicity","text":"","code":"collapse_ethnicity(\"Hispanic\") #> [1] \"H\""},{"path":"https://asenetcky.github.io/distiller/reference/collapse_race.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Race based on EPHT logic — collapse_race","title":"Collapse Race based on EPHT logic — collapse_race","text":"Collapse Race based EPHT logic","code":""},{"path":"https://asenetcky.github.io/distiller/reference/collapse_race.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Race based on EPHT logic — collapse_race","text":"","code":"collapse_race(race, na_is_unknown = TRUE)"},{"path":"https://asenetcky.github.io/distiller/reference/collapse_race.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Race based on EPHT logic — collapse_race","text":"race Race string na_is_unknown Convert NAs \"U\" leave -","code":""},{"path":"https://asenetcky.github.io/distiller/reference/collapse_race.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Race based on EPHT logic — collapse_race","text":"Race string NA_character_","code":""},{"path":"https://asenetcky.github.io/distiller/reference/collapse_race.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse Race based on EPHT logic — collapse_race","text":"","code":"collapse_race(\"Asian\") #> [1] \"O\""},{"path":"https://asenetcky.github.io/distiller/reference/distiller-package.html","id":null,"dir":"Reference","previous_headings":"","what":"distiller: Distill EPHT Data Down to XML — distiller-package","title":"distiller: Distill EPHT Data Down to XML — distiller-package","text":"Centers Disease Control Prevention's (CDC) Environmental Public Health Tracking Network (EPHT) data submission process lot documentation. Much buried date, making difficult new users decipher exact specifications data submissions' XML. `distiller` aims make easier created desired XML.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/distiller/reference/distiller-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"distiller: Distill EPHT Data Down to XML — distiller-package","text":"Maintainer: Alexander Senetcky asenetcky@gmail.com.com (ORCID) [copyright holder]","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_dataset_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dataset xml node — make_dataset_node","title":"Make dataset xml node — make_dataset_node","text":"Make dataset xml node","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_dataset_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dataset xml node — make_dataset_node","text":"","code":"make_dataset_node(data, content_group_id)"},{"path":"https://asenetcky.github.io/distiller/reference/make_dataset_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dataset xml node — make_dataset_node","text":"data Pre-wrangled dataframe content_group_id Code identifies content","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_dataset_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dataset xml node — make_dataset_node","text":"XML node","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_dataset_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make dataset xml node — make_dataset_node","text":"","code":"data_right_vars <- mtcars |>   dplyr::rename(     month = mpg,     agegroup = cyl,     county = disp,     ethnicity = hp,     health_outcome_id = drat,     monthly_count = wt,     race = qsec,     sex = vs,     year = am   ) |>   dplyr::select(-c(gear, carb))  make_dataset_node(data_right_vars, \"AS-HOSP\") #> {xml_document} #> <Dataset> #>  [1] <Row>\\n  <RowIdentifier>1<\/RowIdentifier>\\n  <AdmissionMonth>21<\/Admissi ... #>  [2] <Row>\\n  <RowIdentifier>2<\/RowIdentifier>\\n  <AdmissionMonth>21<\/Admissi ... #>  [3] <Row>\\n  <RowIdentifier>3<\/RowIdentifier>\\n  <AdmissionMonth>22.8<\/Admis ... #>  [4] <Row>\\n  <RowIdentifier>4<\/RowIdentifier>\\n  <AdmissionMonth>21.4<\/Admis ... #>  [5] <Row>\\n  <RowIdentifier>5<\/RowIdentifier>\\n  <AdmissionMonth>18.7<\/Admis ... #>  [6] <Row>\\n  <RowIdentifier>6<\/RowIdentifier>\\n  <AdmissionMonth>18.1<\/Admis ... #>  [7] <Row>\\n  <RowIdentifier>7<\/RowIdentifier>\\n  <AdmissionMonth>14.3<\/Admis ... #>  [8] <Row>\\n  <RowIdentifier>8<\/RowIdentifier>\\n  <AdmissionMonth>24.4<\/Admis ... #>  [9] <Row>\\n  <RowIdentifier>9<\/RowIdentifier>\\n  <AdmissionMonth>22.8<\/Admis ... #> [10] <Row>\\n  <RowIdentifier>10<\/RowIdentifier>\\n  <AdmissionMonth>19.2<\/Admi ... #> [11] <Row>\\n  <RowIdentifier>11<\/RowIdentifier>\\n  <AdmissionMonth>17.8<\/Admi ... #> [12] <Row>\\n  <RowIdentifier>12<\/RowIdentifier>\\n  <AdmissionMonth>16.4<\/Admi ... #> [13] <Row>\\n  <RowIdentifier>13<\/RowIdentifier>\\n  <AdmissionMonth>17.3<\/Admi ... #> [14] <Row>\\n  <RowIdentifier>14<\/RowIdentifier>\\n  <AdmissionMonth>15.2<\/Admi ... #> [15] <Row>\\n  <RowIdentifier>15<\/RowIdentifier>\\n  <AdmissionMonth>10.4<\/Admi ... #> [16] <Row>\\n  <RowIdentifier>16<\/RowIdentifier>\\n  <AdmissionMonth>10.4<\/Admi ... #> [17] <Row>\\n  <RowIdentifier>17<\/RowIdentifier>\\n  <AdmissionMonth>14.7<\/Admi ... #> [18] <Row>\\n  <RowIdentifier>18<\/RowIdentifier>\\n  <AdmissionMonth>32.4<\/Admi ... #> [19] <Row>\\n  <RowIdentifier>19<\/RowIdentifier>\\n  <AdmissionMonth>30.4<\/Admi ... #> [20] <Row>\\n  <RowIdentifier>20<\/RowIdentifier>\\n  <AdmissionMonth>33.9<\/Admi ... #> ..."},{"path":"https://asenetcky.github.io/distiller/reference/make_header_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Header node for XML Document — make_header_node","title":"Make Header node for XML Document — make_header_node","text":"Make Header node XML Document","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_header_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Header node for XML Document — make_header_node","text":"","code":"make_header_node(   mcn,   jurisdiction_code,   content_group_id,   submitter_email,   submitter_name,   submitter_title,   state_fips_code )"},{"path":"https://asenetcky.github.io/distiller/reference/make_header_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Header node for XML Document — make_header_node","text":"mcn Metadata Control Number provided epht jurisdiction_code Two-letter state abbreviation content_group_id Code identifies content submitter_email Email person submitting data epht submitter_name First last name person submitting data submitter_title Title person submitting data state_fips_code FIPS code state","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_header_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Header node for XML Document — make_header_node","text":"XML node","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_header_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Header node for XML Document — make_header_node","text":"","code":"make_header_node(  mcn = \"12345678-1234-1234-1234-123456789012\",  jurisdiction_code = \"CA\",  content_group_id = \"XX-HOSP\",  submitter_email = \"myname@email.com\",  submitter_name = \"First Last\",  submitter_title = \"Data Analyst\",  state_fips_code = \"06\") #> {xml_document} #> <Header> #> [1] <MCN>12345678-1234-1234-1234-123456789012<\/MCN> #> [2] <JurisdictionCode>CA<\/JurisdictionCode> #> [3] <ContentGroupIdentifier>XX-HOSP<\/ContentGroupIdentifier> #> [4] <SubmitterInformation>\\n  <SubmitterEmailAddress>myname@email.com<\/Submit ... #> [5] <StateFIPSCode>06<\/StateFIPSCode>"},{"path":"https://asenetcky.github.io/distiller/reference/make_months_worse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert integer month to string month with leading zero — make_months_worse","title":"Convert integer month to string month with leading zero — make_months_worse","text":"Convert integer month string month leading zero","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_months_worse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert integer month to string month with leading zero — make_months_worse","text":"","code":"make_months_worse(month_integer)"},{"path":"https://asenetcky.github.io/distiller/reference/make_months_worse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert integer month to string month with leading zero — make_months_worse","text":"month_integer Integer month","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_months_worse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert integer month to string month with leading zero — make_months_worse","text":"String month leading zero","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_months_worse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert integer month to string month with leading zero — make_months_worse","text":"","code":"make_months_worse(1) #> [1] \"01\""},{"path":"https://asenetcky.github.io/distiller/reference/make_root_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the root element: HospitalizationData or EmergencyDepartmentData — make_root_element","title":"Make the root element: HospitalizationData or EmergencyDepartmentData — make_root_element","text":"Make root element: HospitalizationData EmergencyDepartmentData","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_root_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the root element: HospitalizationData or EmergencyDepartmentData — make_root_element","text":"","code":"make_root_element(content_group_id)"},{"path":"https://asenetcky.github.io/distiller/reference/make_root_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the root element: HospitalizationData or EmergencyDepartmentData — make_root_element","text":"content_group_id Code identifies content","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_root_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the root element: HospitalizationData or EmergencyDepartmentData — make_root_element","text":"XML node","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_root_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the root element: HospitalizationData or EmergencyDepartmentData — make_root_element","text":"","code":"make_root_element(\"MI-HOSP\") #> {xml_document} #> <HospitalizationData schemaLocation=\"http://www.ephtn.org/NCDM/PH/HospitalizationData ephtn-ph-HospitalizationData.xsd\" xmlns=\"http://www.ephtn.org/NCDM/PH/HospitalizationData\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">"},{"path":"https://asenetcky.github.io/distiller/reference/make_xml_document.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an XML document — make_xml_document","title":"Create an XML document — make_xml_document","text":"Create XML document","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_xml_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an XML document — make_xml_document","text":"","code":"make_xml_document(   data,   content_group_id,   mcn,   jurisdiction_code,   state_fips_code,   submitter_email,   submitter_name,   submitter_title,   check_first = FALSE )"},{"path":"https://asenetcky.github.io/distiller/reference/make_xml_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an XML document — make_xml_document","text":"data Pre-wrangled dataframe content_group_id Code identifies content mcn Metadata Control Number provided epht jurisdiction_code Two-letter state abbreviation state_fips_code FIPS code state submitter_email Email person submitting data epht submitter_name First last name person submitting data submitter_title Title person submitting data check_first Quickly checks validity submission","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_xml_document.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an XML document — make_xml_document","text":"XML document","code":""},{"path":"https://asenetcky.github.io/distiller/reference/make_xml_document.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an XML document — make_xml_document","text":"","code":"data <- mtcars |>   dplyr::rename(     month = mpg,     agegroup = cyl,     county = disp,     ethnicity = hp,     health_outcome_id = drat,     monthly_count = wt,     race = qsec,     sex = vs,     year = am   ) |>   dplyr::select(-c(gear, carb)) content_group_id <- \"AS-HOSP\" mcn <- \"1234-1234-1234-1234-1234\" jurisdiction_code <- \"two_letter_code\" state_fips_code <- \"1234\" submitter_email <- \"submitter@email.com\" submitter_name <- \"Submitter Name\" submitter_title <- \"Submitter Title\" doc <- make_xml_document(  data,  content_group_id,  mcn,  jurisdiction_code,  state_fips_code,  submitter_email,  submitter_name,  submitter_title )"},{"path":"https://asenetcky.github.io/distiller/reference/parse_health_outcome_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the health outcome id based on the content group id — parse_health_outcome_id","title":"Return the health outcome id based on the content group id — parse_health_outcome_id","text":"Return health outcome id based content group id","code":""},{"path":"https://asenetcky.github.io/distiller/reference/parse_health_outcome_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the health outcome id based on the content group id — parse_health_outcome_id","text":"","code":"parse_health_outcome_id(content_group_id)"},{"path":"https://asenetcky.github.io/distiller/reference/parse_health_outcome_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the health outcome id based on the content group id — parse_health_outcome_id","text":"content_group_id Code identifies content","code":""},{"path":"https://asenetcky.github.io/distiller/reference/parse_health_outcome_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the health outcome id based on the content group id — parse_health_outcome_id","text":"Integer health outcome id","code":""},{"path":"https://asenetcky.github.io/distiller/reference/parse_health_outcome_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the health outcome id based on the content group id — parse_health_outcome_id","text":"","code":"parse_health_outcome_id(\"AS-HOSP\") #> [1] 1"},{"path":"https://asenetcky.github.io/distiller/news/index.html","id":"distiller-032","dir":"Changelog","previous_headings":"","what":"distiller 0.3.2","title":"distiller 0.3.2","text":"Update README.md details best use package, scope, expectations can can’t ","code":""},{"path":"https://asenetcky.github.io/distiller/news/index.html","id":"distiller-031","dir":"Changelog","previous_headings":"","what":"distiller 0.3.1","title":"distiller 0.3.1","text":"fix check_county_var labelling county codes correct length success","code":""},{"path":"https://asenetcky.github.io/distiller/news/index.html","id":"distiller-030","dir":"Changelog","previous_headings":"","what":"distiller 0.3.0","title":"distiller 0.3.0","text":"Added basic submission checks content data variables","code":""},{"path":"https://asenetcky.github.io/distiller/news/index.html","id":"distiller-021","dir":"Changelog","previous_headings":"","what":"distiller 0.2.1","title":"distiller 0.2.1","text":"Export check_submission function Add Website related pkgdown github workflow Added Code Conduct","code":""},{"path":"https://asenetcky.github.io/distiller/news/index.html","id":"distiller-020","dir":"Changelog","previous_headings":"","what":"distiller 0.2.0","title":"distiller 0.2.0","text":"basic functionality feature complete","code":""}]
